  #Base CircleCI template for Gradle projects.
  #Defined below are steps for building, OWasp, and Sonar

  version: 2.1
  jobs:
    incremental_build:
      docker: &image
        - image: circleci/openjdk:11-jdk
      steps:
        #This sets some environment variables. Some could be moved into a CircleCI context.
        - run: &env
            name: Setting environment
            command: |
              echo "export RELEASE=0" >> $BASH_ENV
              echo "export RELEASE_VERSION=NA" >> $BASH_ENV
              echo "export RELEASE_TAG=NA" >> $BASH_ENV
              echo "export NEXT_VERSION=NA" >> $BASH_ENV
              echo "export ION_GPG_KEYRING=$ION_RELEASE_KEY" >> $BASH_ENV
              echo "export DISABLE_DOWNLOAD_PROGRESS_OPTS=-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" >> $BASH_ENV
              echo "export LINUX_MVN_RANDOM=-Djava.security.egd=file:/dev/./urandom" >> $BASH_ENV
              echo "export COVERAGE_EXCLUSIONS=**/test/**/*,**/itests/**/*,**/*Test*,**/sdk/**/*,**/*.js,**/node_modules/**/*,**/jaxb/**/*,**/wsdl/**/*,**/nces/sws/**/*,**/*.adoc,**/*.txt,**/*.xml" >> $BASH_ENV
              echo "export GITHUB_USERNAME=connexta" >> $BASH_ENV
              echo "export GITHUB_REPONAME=multi-int-store" >> $BASH_ENV
              echo "export GITHUB_KEY=multi-int-store-github-key" >> $BASH_ENV
              echo "export ORG_GRADLE_PROJECT_dependencyCheckUrlModified='http://10.101.190.7:10179/nvdcve-1.0-modified.json.gz'" >> $BASH_ENV
              echo "export ORG_GRADLE_PROJECT_dependencyCheckUrlBase='http://10.101.190.7:10179/nvdcve-1.0-%d.json.gz'" >> $BASH_ENV
              source $BASH_ENV
        - checkout
        - run:
            name: Building
            command: |
              ./gradlew build --info
        - run:
            name: Save test results
            command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
            when: always
        - store_test_results:
            path: ~/test-results
        - store_artifacts:
            path: ~/test-results/junit
    build:
      docker: *image
      steps:
        - run: *env
        - checkout
        - run:
            name: Building
            command: |
              ./gradlew clean build
        - run:
            name: Save test results
            command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
            when: always
        - store_test_results:
            path: ~/test-results
        - store_artifacts:
            path: ~/test-results/junit
    #Runs OWASP on build
    owasp:
      docker: *image
      steps:
        - run: *env
        - checkout
        - run:
            name: Owasp Tests
            command: |
              ./gradlew dependencyCheckAnalyze --info
    #Runs SonarQube on build
    sonar:
      docker: *image
      steps:
        - run: *env
        - checkout
        - run:
            name: Sonar check
            command: |
              if [ $CIRCLE_BRANCH = master ]
              then
                if [ $RELEASE = true ]
                then
                  ./gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.organization=cx -Dsonar.projectKey=multi-int-store
                fi
              fi
    release_tag:
      docker: *image
      steps:
        - run: *env
        - checkout
        - run:
            name: Release Tag
            command: |
              if [ $RELEASE = true ]
              then
                git checkout $RELEASE_COMMIT
                git remote add ssh-origin git@github.com:connexta/$CIRCLE_PROJECT_REPONAME.git
                echo ssh -i $GITHUB_KEY -l git -o StrictHostKeyChecking=no \\"\\$@\\" > run_ssh.sh
                chmod +x run_ssh.sh
                git push ssh-origin HEAD:$CIRCLE_BRANCH && git push ssh-origin $RELEASE_TAG
              fi
    deploy:
      docker: *image
      steps:
        - run: *env
        - checkout
        - run:
            name: Deploy
            command: |
              if [ $RELEASE = true ]
              then
                git checkout $RELEASE_TAG
              fi
              ./gradlew javadoc:aggregate -B -DskipTests -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS
              if [ $RELEASE = true]
              then
                ./gradlew deploy -B -DskipTests -DretryFailedDeploymentCount=10 -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS -Dgpg.secretKeyring=$ION_GPG_KEYRING -Dgpg.publicKeyring=$ION_GPG_KEYRING -Dgpg.passphraseServerId=\"ion-signing\"
              else
                ./gradlew deploy -B -DskipTests -DretryFailedDeploymentCount=10 -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS
              fi
  workflows:
    version: 2.1
    default:
      triggers:
        filters:
          branches:
            ignore:
              - master
      jobs:
        - incremental_build
        - owasp:
            requires:
              - incremental_build
        - sonar:
            requires:
              - owasp
        - release_tag:
            requires:
              - sonar
    master:
      triggers:
        filters:
          branches:
            only:
              - master
      jobs:
        - build
        - owasp:
            requires:
              - build
        - sonar:
            requires:
              - owasp
        - release_tag:
            requires:
              - sonar