#Base CircleCI template for Gradle projects.
#Defined below are steps for building, OWasp, and Sonar

version: 2.1
jobs:
  incremental_build:
    docker: &image
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Building
          command: |
            ./gradlew build --info
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  build:
    docker: *image
    steps:
      - checkout
      - run:
          name: Building
          command: |
            ./gradlew clean build
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  #Runs OWASP on build
  owasp:
    docker: *image
    steps:
      - checkout
      - run:
          name: Owasp Tests
          command: |
            ./gradlew dependencyCheckAnalyze --info
  #Runs SonarQube on build
  sonar:
    docker: *image
    parameters:
      sonar_key:
        type: string
      sonar_org:
        type: string
      sonar_url:
        type: string
      sonar_token:
        type: string
    steps:
      - checkout
      - run:
          name: Sonar check
          command: ./gradlew sonarqube -x test -Dsonar.projectKey=<<parameters.sonar_key>> -Dsonar.organization=<<parameters.sonar_org>> -Dsonar.host.url=<<parameters.sonar_url>> -Dsonar.login=<<parameters.sonar_token>> -Dsonar.pullrequest.key=${CIRCLE_PULL_REQUEST##*/} -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} -Dsonar.pullrequest.base=master --info
  release_tag:
    docker: *image
    steps:
      - checkout
      - run:
          name: Release Tag
          command: |
            if [ $RELEASE = true ]
            then
              git checkout $RELEASE_COMMIT
              git remote add ssh-origin git@github.com:connexta/$CIRCLE_PROJECT_REPONAME.git
              echo ssh -i $GITHUB_KEY -l git -o StrictHostKeyChecking=no \\"\\$@\\" > run_ssh.sh
              chmod +x run_ssh.sh
              git push ssh-origin HEAD:$CIRCLE_BRANCH && git push ssh-origin $RELEASE_TAG
            fi
  deploy:
    docker: *image
    steps:
      - checkout
      - run:
          name: Deploy
          command: |
            if [ $RELEASE = true ]
            then
              git checkout $RELEASE_TAG
            fi
            ./gradlew javadoc:aggregate -B -DskipTests -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS
            if [ $RELEASE = true]
            then
              ./gradlew deploy -B -DskipTests -DretryFailedDeploymentCount=10 -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS -Dgpg.secretKeyring=$ION_GPG_KEYRING -Dgpg.publicKeyring=$ION_GPG_KEYRING -Dgpg.passphraseServerId=\"ion-signing\"
            else
              ./gradlew deploy -B -DskipTests -DretryFailedDeploymentCount=10 -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS
            fi
workflows:
  version: 2.1
  pr:
    jobs:
      - incremental_build:
          filters:
            branches:
              ignore:
                - master
#      - owasp:
#          requires:
#            - incremental_build
      - sonar:
          context: secrets
#          requires:
#            - owasp
          sonar_key: $CIRCLE_PROJECT_REPONAME
          sonar_org: $SONAR_ORG
          sonar_url: https://sonarcloud.io
          sonar_token: $SONARQUBE_TOKEN
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - owasp:
          requires:
            - build
      - sonar:
          context: secrets
          requires:
            - owasp
          sonar_key: ${CIRCLE_PROJECT_REPONAME}
          sonar_org: ${SONAR_ORG}
          sonar_url: https://sonarcloud.io
          sonar_token: ${SONARQUBE_TOKEN}
# Uncomment when I figure out what I'm doing
#      - release_tag:
#          requires:
#            - sonar